// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Automobilistica.Models
{
    public partial class AutomobilisticaContext : DbContext
    {
        public AutomobilisticaContext()
        {
        }

        public AutomobilisticaContext(DbContextOptions<AutomobilisticaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cargo> Cargo { get; set; }
        public virtual DbSet<CarroCliente> CarroCliente { get; set; }
        public virtual DbSet<Carros> Carros { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Contrato> Contrato { get; set; }
        public virtual DbSet<Enderecos> Enderecos { get; set; }
        public virtual DbSet<Funcionarios> Funcionarios { get; set; }
        public virtual DbSet<Pessoas> Pessoas { get; set; }
        public virtual DbSet<Processos> Processos { get; set; }
        public virtual DbSet<Proposta> Proposta { get; set; }
        public virtual DbSet<PropostaServico> PropostaServico { get; set; }
        public virtual DbSet<Servicos> Servicos { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Cargo>(entity =>
            {
                entity.HasKey(e => e.Cgcdcargo)
                    .HasName("PK__Cargo__45617F9A0A758187");
            });

            modelBuilder.Entity<CarroCliente>(entity =>
            {
                entity.HasKey(e => new { e.Cccdcarro, e.Cccdcliente })
                    .HasName("PK__CarroCli__3F1E63EF868E8718");

                entity.Property(e => e.Ccstatus).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CccdcarroNavigation)
                    .WithMany(p => p.CarroCliente)
                    .HasForeignKey(d => d.Cccdcarro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CarroCliente_Carro");

                entity.HasOne(d => d.CccdclienteNavigation)
                    .WithMany(p => p.CarroCliente)
                    .HasForeignKey(d => d.Cccdcliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CarroCliente_Cliente");
            });

            modelBuilder.Entity<Carros>(entity =>
            {
                entity.HasKey(e => e.Crcdcarro)
                    .HasName("PK__Carros__B7568D20864B5A5F");
            });

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.HasKey(e => e.Clcdcliente)
                    .HasName("PK__Cliente__F3064F354CC8BF17");

                entity.Property(e => e.Clstatus).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.ClcdpessoaNavigation)
                    .WithMany(p => p.Cliente)
                    .HasForeignKey(d => d.Clcdpessoa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Cliente_Pessoas");
            });

            modelBuilder.Entity<Contrato>(entity =>
            {
                entity.HasKey(e => e.Ctcdcontrato)
                    .HasName("PK__Contrato__52B59FED148A98CC");

                entity.Property(e => e.Cttotalhoras).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.CtcdprocessoNavigation)
                    .WithMany(p => p.Contrato)
                    .HasForeignKey(d => d.Ctcdprocesso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Processo_Contrato");

                entity.HasOne(d => d.CtcdpropostaNavigation)
                    .WithMany(p => p.Contrato)
                    .HasForeignKey(d => d.Ctcdproposta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Proposta_Contrato");
            });

            modelBuilder.Entity<Enderecos>(entity =>
            {
                entity.HasKey(e => e.Edcdendereco)
                    .HasName("PK__Endereco__AE4640A91AC6FEE1");

                entity.Property(e => e.Eduf).IsFixedLength();
            });

            modelBuilder.Entity<Funcionarios>(entity =>
            {
                entity.HasKey(e => e.Fncdfunc)
                    .HasName("PK__Funciona__FAF8F364A65EC29B");

                entity.Property(e => e.Fnstatus).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.FncdcargoNavigation)
                    .WithMany(p => p.Funcionarios)
                    .HasForeignKey(d => d.Fncdcargo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Funcionario_Cargo");

                entity.HasOne(d => d.FncdpessoaNavigation)
                    .WithMany(p => p.Funcionarios)
                    .HasForeignKey(d => d.Fncdpessoa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Funcionario_Pessoa");
            });

            modelBuilder.Entity<Pessoas>(entity =>
            {
                entity.HasKey(e => e.Pscdpessoa)
                    .HasName("PK__Pessoas__1EF4F633F4F854C5");

                entity.HasOne(d => d.PscdenderecoNavigation)
                    .WithMany(p => p.Pessoas)
                    .HasForeignKey(d => d.Pscdendereco)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Pessoas_Enderecos");
            });

            modelBuilder.Entity<Processos>(entity =>
            {
                entity.HasKey(e => e.Pccdprocesso)
                    .HasName("PK__Processo__B79E7A76EF913079");

                entity.Property(e => e.Pcstatus).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.PccdproxprocessoNavigation)
                    .WithMany(p => p.InversePccdproxprocessoNavigation)
                    .HasForeignKey(d => d.Pccdproxprocesso)
                    .HasConstraintName("FK_Auto_Relacionamento");
            });

            modelBuilder.Entity<Proposta>(entity =>
            {
                entity.HasKey(e => e.Ppcdproposta)
                    .HasName("PK__Proposta__D4FF2ED749751433");

                entity.Property(e => e.Ppstatus).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.PpcdcarroNavigation)
                    .WithMany(p => p.Proposta)
                    .HasForeignKey(d => d.Ppcdcarro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Proposta_Carros");

                entity.HasOne(d => d.PpcdclienteNavigation)
                    .WithMany(p => p.Proposta)
                    .HasForeignKey(d => d.Ppcdcliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Proposta_Cliente");

                entity.HasOne(d => d.PpcdfuncionarioNavigation)
                    .WithMany(p => p.Proposta)
                    .HasForeignKey(d => d.Ppcdfuncionario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Proposta_Funcionarios");
            });

            modelBuilder.Entity<PropostaServico>(entity =>
            {
                entity.HasKey(e => new { e.Prcdproposta, e.Prcdservico })
                    .HasName("PK__Proposta__F644E4CB0F0BA373");

                entity.HasOne(d => d.PrcdpropostaNavigation)
                    .WithMany(p => p.PropostaServico)
                    .HasForeignKey(d => d.Prcdproposta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PropostaServico_Proposta");

                entity.HasOne(d => d.PrcdservicoNavigation)
                    .WithMany(p => p.PropostaServico)
                    .HasForeignKey(d => d.Prcdservico)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PropostaServico_Servico");
            });

            modelBuilder.Entity<Servicos>(entity =>
            {
                entity.HasKey(e => e.Srcdservico)
                    .HasName("PK__Servicos__B512F25A76BD4FBE");

                entity.Property(e => e.Srstatus).HasDefaultValueSql("((1))");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}